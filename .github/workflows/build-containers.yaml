name: "Build Containers"

on:
  schedule:
    # https://crontab.guru/#42_16_*_*_1,5
    - cron: '42 16 * * 1,5'
  push:
    branches: [ "main" ]

env:
  # Docker registry
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME_BASE: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Ensure that IMAGE_NAME_BASE is all lowercase
      - name: Lowercase IMAGE_NAME_BASE
        run: |
          echo "IMAGE_NAME_BASE=${IMAGE_NAME_BASE,,}" >>${GITHUB_ENV}

      # Gets the version of Fedora distribution used in the Fedora CoreOS base image
      - name: Set BUILDER_VERSION
        run: |
          echo "BUILDER_VERSION=$(curl -s "https://builds.coreos.fedoraproject.org/streams/stable.json" | jq -r '.architectures.x86_64.artifacts.metal.release' | cut -d '.' -f 1)" >> "$GITHUB_ENV"

      # Install the cosign tool
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Add support for building for other platforms with QEMU
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@5927c834f5b4fdf503fca6f4c7eccda82949e1ee # v3.1.0
        with:
          platforms: "linux/amd64,linux/arm64"

      # Set up BuildKit Docker container builder to be able to build multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4fd812986e6c8c2a69e18311145f9371337f27d4 # v3.4.0

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata for Docker image for base
      # https://github.com/docker/metadata-action
      - name: "Extract Docker metadata: base"
        id: meta-base
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BASE }}/base
          tags: |
            type=raw,value=stable,enable={{is_default_branch}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=schedule,pattern={{date 'YYYYMMDD'}}

      # Extract metadata for Docker image for tailscale
      # https://github.com/docker/metadata-action
      - name: "Extract Docker metadata: tailscale"
        id: meta-tailscale
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BASE }}/tailscale
          tags: |
            type=raw,value=stable,enable={{is_default_branch}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=schedule,pattern={{date 'YYYYMMDD'}}

      # Extract metadata for Docker image for zfs
      # https://github.com/docker/metadata-action
      - name: "Extract Docker metadata: zfs"
        id: meta-zfs
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BASE }}/zfs
          tags: |
            type=raw,value=stable,enable={{is_default_branch}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=schedule,pattern={{date 'YYYYMMDD'}}

      # Build and push Docker image for base
      # For linux/amd64 only
      # https://github.com/docker/build-push-action
      - name: "Build and push Docker image: base"
        id: build-and-push-base
        uses: docker/build-push-action@a254f8ca60a858f3136a2f1f23a60969f2c402dd # v6.4.0
        with:
          context: ./base
          push: true
          platforms: "linux/amd64"
          tags: ${{ steps.meta-base.outputs.tags }}
          labels: ${{ steps.meta-base.outputs.labels }}
          file: ./base/Containerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build and push Docker image for tailscale
      # For linux/amd64 only
      # https://github.com/docker/build-push-action
      - name: "Build and push Docker image: tailscale"
        id: build-and-push-tailscale
        uses: docker/build-push-action@a254f8ca60a858f3136a2f1f23a60969f2c402dd # v6.4.0
        with:
          context: ./tailscale
          push: true
          platforms: "linux/amd64"
          tags: ${{ steps.meta-tailscale.outputs.tags }}
          labels: ${{ steps.meta-tailscale.outputs.labels }}
          file: ./tailscale/Containerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build and push Docker image for zfs
      # For linux/amd64 only
      # https://github.com/docker/build-push-action
      - name: "Build and push Docker image: zfs"
        id: build-and-push-zfs
        uses: docker/build-push-action@a254f8ca60a858f3136a2f1f23a60969f2c402dd # v6.4.0
        with:
          context: ./zfs
          push: true
          build-args: |
            BASE_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BASE }}/base:stable
            BUILDER_VERSION=${{ env.BUILDER_VERSION }}
          platforms: "linux/amd64"
          tags: ${{ steps.meta-zfs.outputs.tags }}
          labels: ${{ steps.meta-zfs.outputs.labels }}
          file: ./zfs/Containerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker images digests.
      # This will only write to the public Rekor transparency log when the Docker repository is public to avoid leaking data. 
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker images
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS_BASE: ${{ steps.meta-base.outputs.tags }}
          TAGS_TAILSCALE: ${{ steps.meta-tailscale.outputs.tags }}
          TAGS_ZFS: ${{ steps.meta-zfs.outputs.tags }}
          DIGEST_BASE: ${{ steps.build-and-push-base.outputs.digest }}
          DIGEST_TAILSCALE: ${{ steps.build-and-push-tailscale.outputs.digest }}
          DIGEST_ZFS: ${{ steps.build-and-push-zfs.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate against the sigstore community Fulcio instance.
        run: |
          echo "${TAGS_BASE}" | xargs -I {} cosign sign --yes {}@${DIGEST_BASE}
          echo "${TAGS_TAILSCALE}" | xargs -I {} cosign sign --yes {}@${DIGEST_TAILSCALE}
          echo "${TAGS_ZFS}" | xargs -I {} cosign sign --yes {}@${DIGEST_ZFS}
