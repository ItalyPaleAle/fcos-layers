name: "Build Containers"

on:
  schedule:
    # https://crontab.guru/#42_16_*_*_1,5
    - cron: '42 16 * * 1,5'
  push:
    branches: [ "main" ]

env:
  # Docker registry
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME_BASE: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      # Add support for building for other platforms with QEMU
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
        with:
          platforms: "linux/amd64,linux/arm64"

      # Set up BuildKit Docker container builder to be able to build multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata for Docker image for tailscale
      # https://github.com/docker/metadata-action
      - name: "Extract Docker metadata: tailscale"
        id: meta-tailscale
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BASE }}/tailscale
          tags: |
            type=raw,value=stable,enable={{is_default_branch}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=schedule,pattern={{date 'YYYYMMDD'}}

      # Extract metadata for Docker image for zfs
      # https://github.com/docker/metadata-action
      - name: "Extract Docker metadata: zfs"
        id: meta-zfs
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BASE }}/zfs
          tags: |
            type=raw,value=stable,enable={{is_default_branch}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=schedule,pattern={{date 'YYYYMMDD'}}

      # Build and push Docker image for tailscale
      # For linux/amd64 and linux/arm64
      # https://github.com/docker/build-push-action
      - name: "Build and push Docker image: tailscale"
        id: build-and-push-tailscale
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./tailscale
          push: true
          platforms: "linux/amd64,linux/arm64"
          tags: ${{ steps.meta-tailscale.outputs.tags }}
          labels: ${{ steps.meta-tailscale.outputs.labels }}
          file: ./tailscale/Containerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build and push Docker image for zfs
      # For linux/amd64 only
      # https://github.com/docker/build-push-action
      - name: "Build and push Docker image: zfs"
        id: build-and-push-zfs
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./zfs
          push: true
          build-args: |
            BASE_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BASE }}/tailscale:stable
          platforms: "linux/amd64"
          tags: ${{ steps.meta-zfs.outputs.tags }}
          labels: ${{ steps.meta-zfs.outputs.labels }}
          file: ./zfs/Containerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker images digests.
      # This will only write to the public Rekor transparency log when the Docker repository is public to avoid leaking data. 
      # If you would like to publish transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker images
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS_TAILSCALE: ${{ steps.meta-tailscale.outputs.tags }}
          TAGS_ZFS: ${{ steps.meta-zfs.outputs.tags }}
          DIGEST_TAILSCALE: ${{ steps.build-and-push-tailscale.outputs.digest }}
          DIGEST_ZFS: ${{ steps.build-and-push-zfs.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate against the sigstore community Fulcio instance.
        run: |
          echo "${TAGS_TAILSCALE}" | xargs -I {} cosign sign --yes --force {}@${DIGEST_TAILSCALE}
          echo "${TAGS_ZFS}" | xargs -I {} cosign sign --yes --force {}@${DIGEST_ZFS}
